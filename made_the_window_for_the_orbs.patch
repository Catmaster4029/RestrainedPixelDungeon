Index: core/src/main/assets/messages/items/items.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/core/src/main/assets/messages/items/items.properties b/core/src/main/assets/messages/items/items.properties
--- a/core/src/main/assets/messages/items/items.properties	(revision 0bde7d71f9eccead9492e9ee528ddff8e4ee70e2)
+++ b/core/src/main/assets/messages/items/items.properties	(revision 7cde2c6b241d4c42c5ce2b703788963f9c1247c6)
@@ -1540,7 +1540,7 @@
 
 items.weapon.melee.magesstaff.name=mage's staff
 items.weapon.melee.magesstaff.ac_imbue=IMBUE
-items.weapon.melee.magesstaff.orbs=MANAGE ORBS
+items.weapon.melee.magesstaff.ac_orbs=MANAGE ORBS
 items.weapon.melee.magesstaff.ac_zap=ZAP
 items.weapon.melee.magesstaff.prompt=Select a wand
 items.weapon.melee.magesstaff.imbue=You imbue your staff with the %s.
Index: core/src/main/assets/messages/windows/windows.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/core/src/main/assets/messages/windows/windows.properties b/core/src/main/assets/messages/windows/windows.properties
--- a/core/src/main/assets/messages/windows/windows.properties	(revision 0bde7d71f9eccead9492e9ee528ddff8e4ee70e2)
+++ b/core/src/main/assets/messages/windows/windows.properties	(revision 7cde2c6b241d4c42c5ce2b703788963f9c1247c6)
@@ -296,3 +296,6 @@
 windows.wndwandmaker.ember=Oh, I see you have the embers! I do hope the fire elemental wasn't too much trouble. As I promised, you can choose one of my high quality wands.
 windows.wndwandmaker.berry=Oh, I see you have the berry! I do hope the rotberry plant didn't trouble you too much. As I promised, you can choose one of my high quality wands.
 windows.wndwandmaker.farewell=Good luck in your quest, %s!
+
+windows.wndorbsmanage.orb1=Orb 1
+windows.wndorbsmanage.orb2=Orb 2
\ No newline at end of file
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Mob.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Mob.java b/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Mob.java
--- a/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Mob.java	(revision 0bde7d71f9eccead9492e9ee528ddff8e4ee70e2)
+++ b/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Mob.java	(revision 7cde2c6b241d4c42c5ce2b703788963f9c1247c6)
@@ -1139,8 +1139,8 @@
 				
 			//preserve intelligent allies if they are near the hero
 			} else if (mob.alignment == Alignment.ALLY
-					&& mob.intelligentAlly
-					&& Dungeon.level.distance(holdFromPos, mob.pos) <= 500){
+					&& mob.intelligentAlly)
+					{
 				level.mobs.remove( mob );
 				heldAllies.add(mob);
 			}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/LightOrb.java
===================================================================
diff --git a/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/LightOrb.java b/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/LightOrb.java
--- a/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/LightOrb.java	(revision 0bde7d71f9eccead9492e9ee528ddff8e4ee70e2)
+++ b/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/LightOrb.java	(revision 7cde2c6b241d4c42c5ce2b703788963f9c1247c6)
@@ -25,7 +25,7 @@
 import com.watabou.utils.PathFinder;
 import com.watabou.utils.Random;
 
-public class LightOrb extends Mob {
+public class LightOrb extends DirectableAlly {
 
         private static final float TIME_TO_ZAP	= 1f;
 
@@ -34,7 +34,7 @@
 
                 HP = HT = 1 ;
                 defenseSkill = 1000;
-
+                state = HUNTING;
                 alignment = Alignment.ALLY;
                 intelligentAlly = true;
         }
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MagesStaff.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MagesStaff.java b/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MagesStaff.java
--- a/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MagesStaff.java	(revision 0bde7d71f9eccead9492e9ee528ddff8e4ee70e2)
+++ b/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MagesStaff.java	(revision 7cde2c6b241d4c42c5ce2b703788963f9c1247c6)
@@ -71,7 +71,7 @@
 
 	public static final String AC_IMBUE = "IMBUE";
 	public static final String AC_ZAP	= "ZAP";
-	public static final String ORBS	= "MANAGE ORBS";
+	public static final String AC_ORBS	= "MANAGE ORBS";
 
 
 	private static final float STAFF_SCALE_FACTOR = 0.75f;
@@ -117,7 +117,7 @@
 			actions.add( AC_ZAP );
 		}
 		if (Dungeon.hero.subClass == HeroSubClass.LIGHTBENDER){
-			actions.add(ORBS);
+			actions.add(AC_ORBS);
 		}
 		return actions;
 	}
@@ -146,7 +146,7 @@
 			if (cursed || hasCurseEnchant()) wand.cursed = true;
 			else                             wand.cursed = false;
 			wand.execute(hero, AC_ZAP);
-		} else if (action.equals(ORBS)) {
+		} else if (action.equals(AC_ORBS)) {
 			GameScene.show(new WndOrbsManage());
 			return;
 		}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/messages/Messages.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/messages/Messages.java b/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/messages/Messages.java
--- a/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/messages/Messages.java	(revision 0bde7d71f9eccead9492e9ee528ddff8e4ee70e2)
+++ b/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/messages/Messages.java	(revision 7cde2c6b241d4c42c5ce2b703788963f9c1247c6)
@@ -119,7 +119,7 @@
 			if (c != null && c.getSuperclass() != null){
 				return get(c.getSuperclass(), k, args);
 			} else {
-				return NO_TEXT_FOUND;
+				return "This text is missing, ask for fix. Name: " + k;
 			}
 		}
 	}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndOrbsManage.java
===================================================================
diff --git a/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndOrbsManage.java b/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndOrbsManage.java
--- a/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndOrbsManage.java	(revision 0bde7d71f9eccead9492e9ee528ddff8e4ee70e2)
+++ b/core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndOrbsManage.java	(revision 7cde2c6b241d4c42c5ce2b703788963f9c1247c6)
@@ -1,138 +1,49 @@
 package com.shatteredpixel.shatteredpixeldungeon.windows;
 
-import com.shatteredpixel.shatteredpixeldungeon.Assets;
-import com.shatteredpixel.shatteredpixeldungeon.Chrome;
-import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Belongings;
-import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
-import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.Blacksmith;
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.Imp;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
-import com.shatteredpixel.shatteredpixeldungeon.items.bags.Bag;
+import com.shatteredpixel.shatteredpixeldungeon.items.quest.DwarfToken;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
-import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
 import com.shatteredpixel.shatteredpixeldungeon.scenes.PixelScene;
-import com.shatteredpixel.shatteredpixeldungeon.ui.ItemSlot;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
 import com.shatteredpixel.shatteredpixeldungeon.ui.RedButton;
 import com.shatteredpixel.shatteredpixeldungeon.ui.RenderedTextBlock;
 import com.shatteredpixel.shatteredpixeldungeon.ui.Window;
-import com.watabou.noosa.NinePatch;
-import com.watabou.noosa.audio.Sample;
-import com.watabou.noosa.ui.Component;
+import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
 
 
 public class WndOrbsManage extends Window {
 
-    private static final int BTN_SIZE	= 36;
-    private static final int WIDTH		= 116;
+    private static final int WIDTH      = 120;
+    private static final int BTN_HEIGHT = 20;
+    private static final int GAP        = 2;
 
-    private ItemButton btnPressed;
-    private ItemButton btnItem1;
+    protected RedButton btnorb1;
+    protected RedButton btnorb2;
 
-    public WndOrbsManage( Blacksmith troll, Hero hero ) {
+    public WndOrbsManage() {
 
         super();
 
-        IconTitle titlebar = new IconTitle();
-        titlebar.icon( troll.sprite() );
-        titlebar.label( Messages.titleCase( troll.name() ) );
-        titlebar.setRect( 0, 0, WIDTH, 0 );
-        add( titlebar );
 
-        RenderedTextBlock message = PixelScene.renderTextBlock( Messages.get(this, "prompt"), 6 );
-        message.maxWidth( WIDTH);
-        message.setPos(0, titlebar.bottom() );
-        add( message );
-
-        btnItem1 = new ItemButton() {
+        RedButton btnorb1 = new RedButton( Messages.get(this, "orb1") ) {
             @Override
             protected void onClick() {
-                btnPressed = btnItem1;
-                GameScene.selectItem( itemSelector );
             }
         };
-        btnItem1.setRect( (WIDTH ) / 2 - BTN_SIZE, message.top() + message.height() , BTN_SIZE, BTN_SIZE );
-        add( btnItem1 );
-    }
-
-    protected WndBag.ItemSelector itemSelector = new WndBag.ItemSelector() {
-
-        @Override
-        public String textPrompt() {
-            return Messages.get(WndBlacksmith.class, "select");
-        }
-
-        @Override
-        public Class<?extends Bag> preferredBag(){
-            return Belongings.Backpack.class;
-        }
-
-        @Override
-        public boolean itemSelectable(Item item) {
-            return item.isUpgradable();
-        }
-
-        @Override
-        public void onSelect(Item item) {
-
-        }
-
-    };
-
-    public WndOrbsManage() {
-
-    }
-
-    public static class ItemButton extends Component {
-
-        protected NinePatch bg;
-        protected ItemSlot slot;
-
-        public Item item = null;
-
-        @Override
-        protected void createChildren() {
-            super.createChildren();
-
-            bg = Chrome.get( Chrome.Type.RED_BUTTON);
-            add( bg );
-
-            slot = new ItemSlot() {
-                @Override
-                protected void onPointerDown() {
-                    bg.brightness( 1.2f );
-                    Sample.INSTANCE.play( Assets.Sounds.CLICK );
-                }
-                @Override
-                protected void onPointerUp() {
-                    bg.resetColor();
-                }
-                @Override
-                protected void onClick() {
-                    ItemButton.this.onClick();
-                }
-            };
-            slot.enable(true);
-            add( slot );
-        }
-
-        protected void onClick() {}
-
-        @Override
-        protected void layout() {
-            super.layout();
+        RedButton btnorb2 = new RedButton( Messages.get(this, "orb2") ) {
+            @Override
+            protected void onClick() {
+            }
+        };
 
-            bg.x = x;
-            bg.y = y;
-            bg.size( width, height );
+        btnorb1.setRect( 0, GAP - 2 , WIDTH, BTN_HEIGHT );
+        btnorb2.setRect( 0, (int)btnorb1.bottom() + GAP, WIDTH, BTN_HEIGHT );
+        add( btnorb1 );
+        add( btnorb2 );
 
-            slot.setRect( x + 2, y + 2, width - 4, height - 4 );
-        }
+        resize( WIDTH, 42 );
+    }
 
-        public void item( Item item ) {
-            slot.item( this.item = item );
-        }
-
-        public void clear(){
-            slot.clear();
-        }
-    }
 }
\ No newline at end of file
